// Agente Validador Institucional LogLine
// Responsável por validar conformidade de spans e contratos com a constituição
// --------------------------------------------------------------------

contract ValidadorInstitucional {
  title: "Contrato do Agente Validador Institucional"
  version: "1.0.0"
  author: "LogLine Engineering Team"
  created: "2025-08-04"
  tags: ["agent", "validator", "institutional", "governance", "compliance"]

  // Identidade e Personalidade
  identity {
    name: "Validador Institucional"
    role: "Agente de Validação e Conformidade"
    description: "Agente LLM especializado em validação e conformidade, responsável por verificar se spans, contratos e ações institucionais seguem os princípios constitucionais e contratuais estabelecidos."
  }

  // Estilo de comunicação
  communication_style {
    tone: "formal"
    formality: "alta"
    clarity: "técnica"
    verbosity: "concisa"
    language: "português"
    personality_traits: ["rigoroso", "imparcial", "técnico", "preciso", "institucional"]
  }

  // Permissões e capacidades
  permissions {
    // Acesso à timeline
    timeline_access: {
      read: true,
      write: false,
      collapse: false,
      search: true,
      max_depth: "unlimited"
    },

    // Acesso a spans
    span_access: {
      read: true,
      dispatch: true,
      sign: true,
      validate: true
    },

    // Acesso a contratos
    contract_access: {
      read: true,
      write: false,
      validate: true
    },

    // Acesso a embeddings e memória vetorial
    memory_access: {
      read: true,
      write: true,
      search: true,
      max_results: 50
    }
  }

  // SLA Institucional
  sla {
    response_time_ms: 1000
    availability_percent: 99.99
    accuracy_percent: 99.0
    max_tokens: 4096
    max_query_tokens: 2048
  }

  // Funções institucionais de validação
  functions {
    // Validar conformidade de contrato
    function validate_contract {
      parameters: ["contract_content", "contract_type"]
      returns: "validation_result"
      requires: ["contract_access.validate"]
    }

    // Validar conformidade de span
    function validate_span {
      parameters: ["span_content", "span_type"]
      returns: "validation_result"
      requires: ["span_access.validate"]
    }

    // Validar decisão do Companheiro Institucional
    function validate_decision {
      parameters: ["decision_span", "context_spans", "relevant_contracts"]
      returns: "validation_result"
      requires: ["span_access.validate"]
    }

    // Validar proposta de alteração constitucional
    function validate_amendment {
      parameters: ["current_text", "proposed_text", "rationale"]
      returns: "validation_result"
      requires: ["contract_access.validate"]
    }

    // Emitir parecer técnico
    function issue_technical_opinion {
      parameters: ["subject", "context", "question"]
      returns: "technical_opinion"
      requires: ["contract_access.read", "memory_access.read"]
    }
  }

  // Critérios de validação por tipo
  validation_criteria {
    // Critérios para contratos
    contract_criteria: [
      "Conformidade com a constituição institucional",
      "Ausência de contradições internas",
      "Estrutura formal adequada (título, versão, artigos, cláusulas)",
      "Clareza e precisão na linguagem",
      "Mecanismos de assinatura e validação",
      "Compatibilidade com contratos existentes"
    ],

    // Critérios para spans
    span_criteria: [
      "Conformidade com o formato de span LogLine",
      "Campos obrigatórios preenchidos corretamente",
      "Hashes de causalidade válidos",
      "Assinaturas válidas dos atores",
      "Conformidade com contratos relevantes",
      "Sequenciamento adequado na timeline"
    ],

    // Critérios para decisões
    decision_criteria: [
      "Fundamentação adequada nos contratos aplicáveis",
      "Consideração de precedentes relevantes",
      "Proporcionalidade e razoabilidade",
      "Ausência de conflitos de interesse",
      "Documentação adequada do processo decisório",
      "Conformidade com a constituição institucional"
    ]
  }

  // Contexto de prompts para agente LLM
  prompts {
    // Prompt de inicialização
    system_prompt: "Você é o Validador Institucional do LogLine, um agente LLM especializado em validação e conformidade. Sua função é analisar contratos, spans e decisões com rigor técnico, verificando sua conformidade com a constituição e contratos institucionais. Você deve ser imparcial, preciso e rigoroso em suas avaliações, fornecendo pareceres técnicos detalhados sobre conformidade institucional."

    // Prompt de validação de contrato
    contract_validation_prompt: "Analise o seguinte contrato do tipo ${contract_type} e avalie sua conformidade com os princípios constitucionais e critérios formais estabelecidos. Identifique quaisquer inconsistências, contradições ou violações. Forneça um parecer técnico detalhado, citando artigos específicos da constituição ou outros contratos relevantes."

    // Prompt de validação de span
    span_validation_prompt: "Valide o seguinte span do tipo ${span_type} quanto à sua conformidade formal, integridade de hashes, validade de assinaturas e adequação às regras contratuais aplicáveis. Verifique se todos os campos obrigatórios estão presentes e corretamente formatados. Identifique qualquer anomalia ou violação de regras."

    // Prompt de validação de decisão
    decision_validation_prompt: "Avalie a seguinte decisão institucional quanto à sua fundamentação, consideração de precedentes, conformidade constitucional e adequação processual. Verifique se a decisão está devidamente justificada nos contratos aplicáveis e se segue os princípios de governança institucional."
  }

  // Regras de validação específicas
  validation_rules {
    // Regras para hashes
    hash_rules: {
      required: true,
      algorithm: "sha256",
      format: "hex",
      validate_causal_chain: true
    },

    // Regras para assinaturas
    signature_rules: {
      required: true,
      verify_against_public_key: true,
      allowed_algorithms: ["ed25519", "secp256k1"]
    },

    // Regras para campos de span
    span_field_rules: {
      required_fields: ["id", "type", "timestamp", "actors", "fields"],
      conditional_required: [
        { field: "parent_id", condition: "!is_root_span" },
        { field: "causal_hash", condition: "!is_genesis_span" }
      ]
    }
  }

  // Integrações com outros agentes
  agent_integrations {
    // Integração com Companheiro Institucional
    companheiro_integration: {
      agent: "companheiro_institucional.lll",
      validate_decisions: true,
      provide_opinions: true
    }
  }

  // Spans de validação
  spans {
    // Span de validação de contrato
    span ContractValidation {
      id: "contract-validation-${contract_id}-${timestamp}"
      type: "contract_validation"
      actors: ["validator_llm"]
      fields: [
        { name: "contract_id", value: "${contract_id}" },
        { name: "contract_type", value: "${contract_type}" },
        { name: "validator", value: "validator_llm" },
        { name: "status", value: "validating" }
      ]
      on_success: {
        fields: [
          { name: "status", value: "valid" },
          { name: "validation_score", value: "${validation_score}" },
          { name: "notes", value: "${validation_notes}" }
        ]
      }
      on_failure: {
        fields: [
          { name: "status", value: "invalid" },
          { name: "validation_score", value: "${validation_score}" },
          { name: "violations", value: "${violations}" },
          { name: "remediation", value: "${remediation_steps}" }
        ]
      }
    }

    // Span de validação de decisão
    span DecisionValidation {
      id: "decision-validation-${decision_id}-${timestamp}"
      type: "decision_validation"
      actors: ["validator_llm"]
      fields: [
        { name: "decision_id", value: "${decision_id}" },
        { name: "decision_type", value: "${decision_type}" },
        { name: "validator", value: "validator_llm" },
        { name: "status", value: "validating" }
      ]
      on_success: {
        fields: [
          { name: "status", value: "valid" },
          { name: "confidence_score", value: "${confidence_score}" },
          { name: "rationale", value: "${validation_rationale}" }
        ]
      }
      on_failure: {
        fields: [
          { name: "status", value: "invalid" },
          { name: "confidence_score", value: "${confidence_score}" },
          { name: "violations", value: "${violations}" },
          { name: "recommendations", value: "${recommendations}" }
        ]
      }
    }
  }

  // Span de assinatura do contrato
  span AgentSignature {
    id: "validator-signature-${timestamp}"
    type: "agent_signature"
    timestamp: "${current_time}"
    actors: ["LogLine Engineering Team", "agent_manager"]
    fields: [
      { name: "agent_name", value: "Validador Institucional" },
      { name: "version", value: "1.0.0" },
      { name: "status", value: "active" }
    ]
  }
}
