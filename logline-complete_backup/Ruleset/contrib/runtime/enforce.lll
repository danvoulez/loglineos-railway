enzyme guardian.enforce@v1 {
  doc: "Guardian enforcement with OTEL. Delegates to imported guardian if present; otherwise falls back to policy default."
  input { scope: String, subject_id: String?, resource: String?, action: String?, tenant_id: String?, context: Json? }
  observability.otel.emit@v1 { name: "guardian.enforce.start", attributes: { scope: input.scope, resource: input.resource, action: input.action } }
  try {
    step out = imported.warrior.guardian.enforce@v1 { scope: input.scope, subject_id: input.subject_id?, resource: input.resource?, action: input.action?, context: input.context? }
    observability.otel.emit@v1 { name: "guardian.enforce.result", attributes: { decision: out.decision ?? "unknown" } }
    return out
  } catch {
    // Fallback default (could read ledger.policy.guardian; here, allow)
    observability.otel.emit@v1 { name: "guardian.enforce.fallback", attributes: { reason: "guardian.not_present" } }
    return { decision: "allow", reason: "guardian.not_present" }
  }
}
