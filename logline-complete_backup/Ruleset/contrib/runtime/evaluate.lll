enzyme access.evaluate@v1 {
  doc: "RBAC + Guardian combined decision. Guardian 'deny' overrides; otherwise allow."
  input { tenant_id: String, user_id: String, resource: String, action: String, scope: String="default", context: Json? }
  step r = rbac.assert@v1 { tenant_id: input.tenant_id, user_id: input.user_id, resource: input.resource, action: input.action }
  // if RBAC enzyme errors, request fails; else call guardian
  step g = guardian.enforce@v1 { scope: input.scope, subject_id: input.user_id, resource: input.resource, action: input.action, tenant_id: input.tenant_id, context: input.context? }
  if g.decision == "deny" { stop error "access.denied.guardian" { reason: g.reason? ?? "guardian.deny" } }
  return { decision: "allow", via: "rbac+guardian", guardian: g.decision ?? "allow" }
}
